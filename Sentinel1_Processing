/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #d63000 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-11.236575820727328, 55.44513075811705],
          [-11.236575820727328, 51.24187686148456],
          [-5.347903945727328, 51.24187686148456],
          [-5.347903945727328, 55.44513075811705]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var funcs = require('users/tomosdanielmorgan/ProgrammingFunctions:Sentinel1');
var batch = require('users/fitoprincipe/geetools:batch');

var all = funcs.allSentinel1(geometry, 2024, 2024, 6, 8, 1, 31,'DESCENDING',['VV', 'VH']);
print(all);
print(all.first());

Map.centerObject(geometry, 10);
Map.addLayer(all.select('VV').mean(), {min:-25, max:0}, 'Mean VV');
Map.addLayer(all.select('VH').mean(), {min:-30, max:-5}, 'Mean VH');

//var vis = {bands:['VV'], min:-25, max:0};
//var frames = all.sort('system:time_start').map(function(img){
//  return img.visualize(vis).clip(geometry);
//});
// --- keep your preview unchanged ---
//print(ui.Thumbnail(frames, {
//  region: geometry,
//  framesPerSecond: 3,
//  maxPixels: 1e9
//}));
//var meanVH = all.select('VH').mean();

//Map.addLayer(meanVH, {min:-30, max:-5}, 'Mean VH');

//Export.image.toDrive({
//  image: meanVH,
//  description: 'Cymru',  
//folder: 'Sentinel1',                    
//  region: geometry,
//  scale: 10,
//  crs: 'EPSG:4326',
//  maxPixels: 1e13
//});