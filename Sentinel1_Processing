/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[163.26343613921756, -73.5028765734143],
          [163.26343613921756, -74.44880607399297],
          [168.39405137359256, -74.44880607399297],
          [168.39405137359256, -73.5028765734143]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var funcs = require('users/tomosdanielmorgan/ProgrammingFunctions:Sentinel1');
var batch = require('users/fitoprincipe/geetools:batch');

var all = funcs.allSentinel1(geometry, 2024, 2024, 1, 12, 1, 31, 'DESCENDING', null);

print('All images:', all.size());
print('First image:', all.first());

var allHV = all.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'HV'));
var allHH = all.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'HH'));

Map.centerObject(geometry, 10);

Map.addLayer(allHV.select('HV').mean(), {min: -30, max: -5}, 'Mean HV');
Map.addLayer(allHH.select('HH').mean(), {min: -25, max: 0},  'Mean HH');

var vis = {bands: ['HV'], min: -30, max: -5};
var frames = allHV.sort('system:time_start').map(function (img) {
  return img.visualize(vis).clip(geometry);
});

print(ui.Thumbnail(frames, {
  region: geometry,
  framesPerSecond: 4,
  maxPixels: 1e9
}));

//var meanVH = all.select('VH').mean();

//Map.addLayer(meanVH, {min:-30, max:-5}, 'Mean VH');

//Export.image.toDrive({
//  image: meanVH,
//  description: 'Cymru',  
//folder: 'Sentinel1',                    
//  region: geometry,
//  scale: 10,
//  crs: 'EPSG:4326',
//  maxPixels: 1e13
//});